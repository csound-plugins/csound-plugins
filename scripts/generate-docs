#!/usr/bin/env python3
import json
import sys
import os
import pathlib
import argparse
import shutil
import subprocess

parser = argparse.ArgumentParser()
parser.add_argument("--wikirepo",
                    help="Path to the repository holding the wiki repository"
                    "If given, files are copied there.")

args = parser.parse_args()

def get_rootfolder() -> pathlib.Path:
    this = pathlib.Path(sys.argv[0]).absolute()
    return this.parent.parent
    
def get_manifests(rootfolder):
    """
    returns a list of Paths
    """
    root = pathlib.Path(rootfolder)
    print(rootfolder)
    return list((root/"src").glob("**/manifest.json"))

def generate_index_files(buildfolder):
    # generate home
    root = get_rootfolder()
    subprocess.call([root/"scripts"/"_generate-wiki-home.py",
                     "--destfolder", buildfolder])
    
def fill_manual_pages():
    root = get_rootfolder()
    subprocess.call([root / "scripts" / "fill-manual-pages"])

    
def find_manual_pages(rootfolder: pathlib.Path, opcodes):
    """ for each opcode find a file opcode.md inside rootfolder (recursively) """
    mdopcodes = {opcode + ".md" for opcode in opcodes}
    return [md for md in pathlib.Path(rootfolder).glob("**/*.md") if md.name in mdopcodes]
    

def find_opcodes(rootfolder):
    """ find opcodes based on the manifest"""
    manifests = get_manifests(rootfolder)
    opcodes = set()
    for manifest in manifests:
        try:
            with open(str(manifest)) as f:
                d = json.load(f)
        except json.decoder.JSONDecodeError:
            print(f"Could not decode manifest {manifest}")
            continue
        opcodes_in_manifest = d.get("opcodes")
        if opcodes_in_manifest:
            opcodes.update(opcodes_in_manifest)
    return opcodes

def copyall(files, dest):
    if files is None:
        return 
    for f in files:
        print(f"copying {f} to {dest}")
        shutil.copy(f, dest)

if __name__ == "__main__":
    rootfolder = get_rootfolder()
    buildfolder = rootfolder / ".wiki"
    buildfolder.mkdir(exist_ok=True)
    wikifolder = rootfolder/"wiki"
    copyall(list(wikifolder.glob("*.md")), buildfolder)
    fill_manual_pages()
    generate_index_files(buildfolder=buildfolder)
    opcodes = find_opcodes(rootfolder)
    manpages = find_manual_pages(rootfolder/"src", opcodes)
    copyall(manpages, buildfolder)
    print(f"Generated files are in {buildfolder}")
    if args.wikirepo:
        wikirepo = pathlib.Path(args.wikirepo).absolute()
        print(f"Installing all files to {wikirepo}")
        wikifiles = buildfolder.glob("*.md")
        copyall(wikifiles, wikirepo)
        
    
