# dict_query

## Abstract

Query different properties of a dict

## Description

Properties of a dict which do not need a separate opcode (because they are not used very frequently) are merged togehter in this opcode. 
Possible properties are:
* `exists`: return 1 if the handle points to a valid dict
* `size`: returns the size of this dict (similar to dict_size)
* `type`: returns an integer identifying the type of this dict
  * `11`: number -> number
  * `12`: number -> string
  * `21`: string -> number
  * `22`: string -> string
* `keys`: returns an array with all the keys defined in this dict (the type of the returned array depends on the type of the keys)
* `values`: returns an array with all the values (the type of the returned array depends on the type of the values). 

**NB**: the order in which keys and values are returned represents the corresponding pairs, so keys[i] and values[i] belong to the same pair.

## Syntax

    kexists   dict_query idict, "exists"
    ksize     dict_query idict, "size"
    ktype     dict_query idict, "type"
    SKeys[]   dict_query idict, "keys"
    kKeys[]   dict_query idict, "keys"
    kValues[] dict_query idict, "values"
    SValues[] dict_query idict, "values"
    
**NB**: the arrays returned from keys and values can have either an S- or a k-type, depending on the type definition of the array 
    
`dict_query` executes at **k-time**. 

## Arguments

* `idict`: the handle of the dict, as returned by `dict_new`


## Examples

{example}

## See also

* [dict_iter](dict_iter)
* [dict_size](dict_size)

## Credits

Eduardo Moguillansky, 2019
