# pwrite

## Abstract

Modify pfield values of an active instrument instance

## Description

`pwrite` can be used to modify the value of a pfield of a running instance 
(possibly a fractional instrument number).

A matching instance is searched at performance time, so that its
behaviour can be controlled via `if` or `timout` statements.

If no active instance is found, search is retried until a matching
instance is found. To avoid retrying, set `instrnum` to a negative value.

If the instance ceases to exist during another instrument is modifying
its pfield values, nothing happens. `pwrite` notices that the instance
is not active anymore and becomes a `NOOP`.

**NB**: in order for pwrite to have any effect, the instrument in question should
have an assignment of the sort `kfreq = p5`. 

### Exact instance vs Broadcasting

If `instrnum` is a fractional instrument number, pwrite will only affect
the first instance matching this exact number.

If `instrnum` is set to an integer number, `pwrite` will **broadcast** the
changes to **ALL** instruments with the same integer number.

!!! Note

    Setting a value of a pfield out of range will result in a 
    performance error. 

## Syntax

```csound

pwrite instrnum:i, index:i|k, value:i|k, [index2, value2, ...]

```
    
### Arguments

* `instrnum` (init only): the (fractional) instrument number to modify
* `index` (i-, k-): the index of the pfield to modify. If kindex is 4, then p4 will be modified
* `value` (i-, k-): the new value of the given pfield

!!! Note

    Multiple index:value pairs can be modified simultaneously


### Execution Time

* Init (if index and value are i-values)
* Performance (if any index or value are k-variables)

## Examples

{example}


## See also

* [pread](pread.md)
* [pset](https://csound.com/docs/manual/pset.html)
* [p](https://csound.com/docs/manual/p.html)
* [passign](https://csound.com/docs/manual/passign.html)
* [uniqinstance](uniqinstance.md)

## Credits

Eduardo Moguillansky, 2019
