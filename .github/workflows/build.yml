name: Build

on:
  push

jobs:
  build:
    name: Build plugins on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - run: mkdir -p artifacts
      
      - name: linux build
        if: runner.os == 'linux'
        run: |
          sudo apt-get install libsndfile1-dev
          sudo apt-get install nasm
          
          git submodule update --init --recursive --remote
          git submodule foreach git pull origin master
          git submodule status --recursive

          rm -fr build-linux
          mkdir build-linux
          cd build-linux

          cmake -DSKIP_FAST_MATH=True ..
          make -j4
          ls
          ARCHIVE=csound-plugins--linux.zip
          7z a $ARCHIVE *.so
          7z a $ARCHIVE ../assets/README.txt
          7z l $ARCHIVE

          cp $ARCHIVE ../artifacts

          #cd ..
          #mkdir -p release/latest
          #cp build-linux/$ARCHIVE release/latest
          #git cm "linux build"
          

      # Restore from cache the previously built ports. If cache-miss, download and build vcpkg (aka "bootstrap vcpkg").
      - name: Restore from cache and install vcpkg
        if: runner.os == 'windows'
        # Download and build vcpkg, without installing any port. If content is cached already, it is a no-op.
        uses: lukka/run-vcpkg@v6
        with:
          vcpkgArguments: libsndfile:x64-windows
          vcpkgTriplet: x64-windows
          vcpkgGitCommitId: "0bf3923f9fab4001c00f0f429682a0853b5749e0"
          # setupOnly: true
          
      - name: windows build
        if: runner.os == 'windows'
        run: |
          # where.exe vcpkg
          # $VCPKG_ROOT/vcpkg integrate install
          # vcpkg integrate install
          # $VCPKG_ROOT/vcpkg install libsndfile:x64-windows

          #vcpkg install libsndfile:x64-windows
          
          git submodule update --init --recursive --remote
          git submodule foreach git pull origin master
          git submodule status --recursive

          Remove-Item -Recurse -Force build-windows -ErrorAction Ignore

          mkdir build-windows
          cd build-windows

          # cmake -A x64 -DBUILD_JSUSFX_OPCODES=OFF -DCMAKE_TOOLCHAIN_FILE="C:\vcpkg\scripts\buildsystems\vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=x64-windows ..
          cmake -A x64 -DBUILD_JSUSFX_OPCODES=OFF -DCMAKE_TOOLCHAIN_FILE="$VCPKG_ROOT\scripts\buildsystems\vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=x64-windows ..
          cmake --build . --config Release

          set-variable -name ARCHIVE -value "csound-plugins--win64.zip"
          rm $ARCHIVE -ErrorAction Ignore

          rm -ErrorAction Ignore Release/FLAC.dll, Release/ogg.dll, Release/opus.dll, Release/sndfile.dll, Release/vorbis*
          7z a $ARCHIVE ./Release/*.dll
          7z a $ARCHIVE ../assets/README.txt
          7z l $ARCHIVE
          ls
          cd ..
          ls

          cp $ARCHIVE ../artifacts

      - uses: actions/upload-artifact@v2
        with:
          name: plugins
          path: artifacts/*.zip
           
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            artifacts/*  
          